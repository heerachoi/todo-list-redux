{"ast":null,"code":"var _jsxFileName = \"/Users/heera/Desktop/Web/git/todo-list-redux/src/component/TodoList/TodoList.jsx\";\nimport './TodoList.css';\nimport { NavLink } from 'react-router-dom';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodoListWarp, TodoContainer } from './style';\n\n// Todo Î¶¨Ïä§Ìä∏\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  let {\n    todos,\n    isDone\n  } = _ref;\n  // ÏôÑÎ£å Î≤ÑÌäºÏù¥ onClickÎêòÎ©¥ Ïã§ÌñâÎêòÎäî Î∂ÄÎ∂Ñ\n  // const handleComplete = (todo) => {\n  //   setTodos(\n  //     todos.map((item) => {\n  //       if (item.id === todo.id) {\n  //         return {...item, isDone: !item.isDone};\n  //       }\n  //       return item;\n  //     })\n  //   );\n  // };\n\n  // ÏÇ≠Ï†ú Î≤ÑÌäºÏù¥ onClickÎêòÎ©¥ Ïã§ÌñâÎêòÎäî Î∂ÄÎ∂Ñ\n  // const handleDelete = ({id}) => {\n  //   setTodos(todos.filter((todo) => todo.id !== id));\n  // };\n\n  // TodosÏôÄ WorkÎäî falseÍ∞íÏùÑ Î∞õÏïÑÏò§Í≥† DoneÏùÄ trueÍ∞íÏùÑ Î∞õÏïÑÏò®Îã§.\n  // trueOrFalseÏùò ÏÉÅÌÉúÏóê Îî∞Îùº isDoneÏùÑ ÌôïÏù∏Ìï¥ÏÑú resultDoneÏóê Ï∂îÍ∞ÄÌïòÏó¨ Î∞∞Ïó¥ÏùÑ returnÌïúÎã§.\n\n  // const checkDone = (todos, trueOrFalse) => {\n  //   let resultDone = [];\n  //   for (let todo of todos) {\n  //     if (todo.isDone === trueOrFalse) {\n  //       resultDone.push(\n  //         <TodoContainer key={todo.id}>\n  //           <NavLink to={`${todo.id}`}>ÏÉÅÏÑ∏Î≥¥Í∏∞</NavLink>\n  //           <h2 className='todo-title'>üìç{todo.title}</h2>\n  //           <div className='todo-context'>{todo.context}</div>\n  //           <div className='buttons'>\n  //             <button className='button-delete button' onClick={() => handleDelete(todo)}>\n  //               ÏÇ≠Ï†úÌïòÍ∏∞\n  //             </button>\n  //             <button className='button-complete button' onClick={() => handleComplete(todo)}>\n  //               {trueOrFalse ? 'Ï∑®ÏÜå' : 'ÏôÑÎ£å'}\n  //             </button>\n  //           </div>\n  //         </TodoContainer>\n  //       );\n  //     }\n  //   }\n  //   return resultDone;\n  // };\n\n  return /*#__PURE__*/_jsxDEV(TodoListWarp, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"list-title\",\n      children: isDone ? 'Working..üî•' : 'Done..!üéâ'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), todos.filter(item => item.isDone === !isDone).map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n      id: item.id,\n      title: item.title,\n      context: item.context,\n      isDone: item.isDone\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["NavLink","TodoItem","TodoListWarp","TodoContainer","TodoList","todos","isDone","filter","item","map","id","title","context"],"sources":["/Users/heera/Desktop/Web/git/todo-list-redux/src/component/TodoList/TodoList.jsx"],"sourcesContent":["import './TodoList.css';\nimport {NavLink} from 'react-router-dom';\nimport TodoItem from '../TodoItem/TodoItem';\nimport {TodoListWarp, TodoContainer} from './style';\n\n// Todo Î¶¨Ïä§Ìä∏\nconst TodoList = ({todos, isDone}) => {\n  // ÏôÑÎ£å Î≤ÑÌäºÏù¥ onClickÎêòÎ©¥ Ïã§ÌñâÎêòÎäî Î∂ÄÎ∂Ñ\n  // const handleComplete = (todo) => {\n  //   setTodos(\n  //     todos.map((item) => {\n  //       if (item.id === todo.id) {\n  //         return {...item, isDone: !item.isDone};\n  //       }\n  //       return item;\n  //     })\n  //   );\n  // };\n\n  // ÏÇ≠Ï†ú Î≤ÑÌäºÏù¥ onClickÎêòÎ©¥ Ïã§ÌñâÎêòÎäî Î∂ÄÎ∂Ñ\n  // const handleDelete = ({id}) => {\n  //   setTodos(todos.filter((todo) => todo.id !== id));\n  // };\n\n  // TodosÏôÄ WorkÎäî falseÍ∞íÏùÑ Î∞õÏïÑÏò§Í≥† DoneÏùÄ trueÍ∞íÏùÑ Î∞õÏïÑÏò®Îã§.\n  // trueOrFalseÏùò ÏÉÅÌÉúÏóê Îî∞Îùº isDoneÏùÑ ÌôïÏù∏Ìï¥ÏÑú resultDoneÏóê Ï∂îÍ∞ÄÌïòÏó¨ Î∞∞Ïó¥ÏùÑ returnÌïúÎã§.\n\n  // const checkDone = (todos, trueOrFalse) => {\n  //   let resultDone = [];\n  //   for (let todo of todos) {\n  //     if (todo.isDone === trueOrFalse) {\n  //       resultDone.push(\n  //         <TodoContainer key={todo.id}>\n  //           <NavLink to={`${todo.id}`}>ÏÉÅÏÑ∏Î≥¥Í∏∞</NavLink>\n  //           <h2 className='todo-title'>üìç{todo.title}</h2>\n  //           <div className='todo-context'>{todo.context}</div>\n  //           <div className='buttons'>\n  //             <button className='button-delete button' onClick={() => handleDelete(todo)}>\n  //               ÏÇ≠Ï†úÌïòÍ∏∞\n  //             </button>\n  //             <button className='button-complete button' onClick={() => handleComplete(todo)}>\n  //               {trueOrFalse ? 'Ï∑®ÏÜå' : 'ÏôÑÎ£å'}\n  //             </button>\n  //           </div>\n  //         </TodoContainer>\n  //       );\n  //     }\n  //   }\n  //   return resultDone;\n  // };\n\n  return (\n    <TodoListWarp>\n      <h2 className='list-title'>{isDone ? 'Working..üî•' : 'Done..!üéâ'}</h2>\n      {todos\n        .filter((item) => item.isDone === !isDone)\n        .map((item) => (\n          <TodoItem key={item.id} id={item.id} title={item.title} context={item.context} isDone={item.isDone} />\n        ))}\n    </TodoListWarp>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAO,gBAAgB;AACvB,SAAQA,OAAO,QAAO,kBAAkB;AACxC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAAQC,YAAY,EAAEC,aAAa,QAAO,SAAS;;AAEnD;AAAA;AACA,MAAMC,QAAQ,GAAG,QAAqB;EAAA,IAApB;IAACC,KAAK;IAAEC;EAAM,CAAC;EAC/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,YAAY;IAAA,wBACX;MAAI,SAAS,EAAC,YAAY;MAAA,UAAEA,MAAM,GAAG,aAAa,GAAG;IAAW;MAAA;MAAA;MAAA;IAAA,QAAM,EACrED,KAAK,CACHE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,MAAM,KAAK,CAACA,MAAM,CAAC,CACzCG,GAAG,CAAED,IAAI,iBACR,QAAC,QAAQ;MAAe,EAAE,EAAEA,IAAI,CAACE,EAAG;MAAC,KAAK,EAAEF,IAAI,CAACG,KAAM;MAAC,OAAO,EAAEH,IAAI,CAACI,OAAQ;MAAC,MAAM,EAAEJ,IAAI,CAACF;IAAO,GAApFE,IAAI,CAACE,EAAE;MAAA;MAAA;MAAA;IAAA,QACvB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACS;AAEnB,CAAC;AAAC,KAvDIN,QAAQ;AAyDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}