{"ast":null,"code":"var _jsxFileName = \"/Users/heera/Desktop/Web/git/todo-list-redux/src/component/TodoList/TodoList.jsx\";\nimport './TodoList.css';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodoListWarp, TodoItemWrap } from './style';\n\n// Todo ë¦¬ìŠ¤íŠ¸\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  let {\n    todos,\n    isDone\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(TodoListWarp, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"list-title\",\n      children: isDone ? 'ðŸŽ‰ DONE ðŸŽ‰' : 'ðŸ”¥ WORKING ðŸ”¥'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoItemWrap, {\n      children: todos.filter(item => item.isDone === isDone).map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n        id: item.id,\n        inputTitle: item.inputTitle,\n        input: item.input,\n        isDone: item.isDone\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["TodoItem","TodoListWarp","TodoItemWrap","TodoList","todos","isDone","filter","item","map","id","inputTitle","input"],"sources":["/Users/heera/Desktop/Web/git/todo-list-redux/src/component/TodoList/TodoList.jsx"],"sourcesContent":["import './TodoList.css';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodoListWarp, TodoItemWrap } from './style';\n\n// Todo ë¦¬ìŠ¤íŠ¸\nconst TodoList = ({ todos, isDone }) => {\n  return (\n    <TodoListWarp>\n      <h2 className='list-title'>{isDone ? 'ðŸŽ‰ DONE ðŸŽ‰' : 'ðŸ”¥ WORKING ðŸ”¥'}</h2>\n      <TodoItemWrap>\n        {todos\n          .filter((item) => item.isDone === isDone)\n          .map((item) => (\n            <TodoItem key={item.id} id={item.id} inputTitle={item.inputTitle} input={item.input} isDone={item.isDone} />\n          ))}\n      </TodoItemWrap>\n    </TodoListWarp>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAO,gBAAgB;AACvB,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,YAAY,EAAEC,YAAY,QAAQ,SAAS;;AAEpD;AAAA;AACA,MAAMC,QAAQ,GAAG,QAAuB;EAAA,IAAtB;IAAEC,KAAK;IAAEC;EAAO,CAAC;EACjC,oBACE,QAAC,YAAY;IAAA,wBACX;MAAI,SAAS,EAAC,YAAY;MAAA,UAAEA,MAAM,GAAG,YAAY,GAAG;IAAe;MAAA;MAAA;MAAA;IAAA,QAAM,eACzE,QAAC,YAAY;MAAA,UACVD,KAAK,CACHE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,MAAM,KAAKA,MAAM,CAAC,CACxCG,GAAG,CAAED,IAAI,iBACR,QAAC,QAAQ;QAAe,EAAE,EAAEA,IAAI,CAACE,EAAG;QAAC,UAAU,EAAEF,IAAI,CAACG,UAAW;QAAC,KAAK,EAAEH,IAAI,CAACI,KAAM;QAAC,MAAM,EAAEJ,IAAI,CAACF;MAAO,GAA1FE,IAAI,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QACvB;IAAC;MAAA;MAAA;MAAA;IAAA,QACS;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEnB,CAAC;AAAC,KAbIN,QAAQ;AAed,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}