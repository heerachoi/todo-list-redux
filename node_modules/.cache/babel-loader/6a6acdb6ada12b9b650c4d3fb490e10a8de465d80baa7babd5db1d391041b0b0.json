{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\n\n// import {ADD_TODO, TOGGLE_DONE, DELETE_TODO} from './actions';\n\n// action types\nexport const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_DONE = 'TOGGLE_DONE';\nexport const DELETE_TODO = 'DELETE_TODO';\n\n// action creators\n// 투두 추가\nexport const addTodo = payload => {\n  return {\n    type: ADD_TODO,\n    payload\n  };\n};\n\n// 투두 완료 여부\nexport const toggleDone = payload => {\n  return {\n    type: TOGGLE_DONE,\n    payload\n  };\n};\n\n// 투두 삭제\nexport const deleteTodo = payload => {\n  return {\n    type: DELETE_TODO,\n    payload\n  };\n};\nconst initialState = [{\n  id: uuidv4(),\n  inputTitle: '알고리즘',\n  input: '알고리즘 문제 풀기',\n  isDone: false\n}, {\n  id: uuidv4(),\n  inputTitle: '리액트',\n  input: 'Todo list 만들기',\n  isDone: true\n}];\nconst todoApp = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    // 투두 추가\n    case ADD_TODO:\n      return [...state, {\n        id: action.payload.id,\n        inputTitle: action.payload.inputTitle,\n        input: action.payload.input,\n        isDone: action.payload.isDone\n      }];\n    // 미완료/완료 토글\n    case TOGGLE_DONE:\n      {\n        const newState = state.map(item => {\n          return item.id === action.payload.id ? {\n            ...item,\n            isDone: !item.isDone\n          } : item;\n        });\n        return newState;\n      }\n\n    // 투두 삭제\n    case DELETE_TODO:\n      return state.filter(todo => todo.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\nexport default todoApp;","map":{"version":3,"names":["v4","uuidv4","ADD_TODO","TOGGLE_DONE","DELETE_TODO","addTodo","payload","type","toggleDone","deleteTodo","initialState","id","inputTitle","input","isDone","todoApp","state","action","newState","map","item","filter","todo"],"sources":["/Users/heera/Desktop/Web/git/todo-list-redux/src/store/reducers.js"],"sourcesContent":["import {v4 as uuidv4} from 'uuid';\n\n// import {ADD_TODO, TOGGLE_DONE, DELETE_TODO} from './actions';\n\n// action types\nexport const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_DONE = 'TOGGLE_DONE';\nexport const DELETE_TODO = 'DELETE_TODO';\n\n// action creators\n// 투두 추가\nexport const addTodo = (payload) => {\n  return {type: ADD_TODO, payload};\n};\n\n// 투두 완료 여부\nexport const toggleDone = (payload) => {\n  return {type: TOGGLE_DONE, payload};\n};\n\n// 투두 삭제\nexport const deleteTodo = (payload) => {\n  return {type: DELETE_TODO, payload};\n};\n\nconst initialState = [\n  {\n    id: uuidv4(),\n    inputTitle: '알고리즘',\n    input: '알고리즘 문제 풀기',\n    isDone: false,\n  },\n  {\n    id: uuidv4(),\n    inputTitle: '리액트',\n    input: 'Todo list 만들기',\n    isDone: true,\n  },\n];\n\nconst todoApp = (state = initialState, action) => {\n  switch (action.type) {\n    // 투두 추가\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          id: action.payload.id,\n          inputTitle: action.payload.inputTitle,\n          input: action.payload.input,\n          isDone: action.payload.isDone,\n        },\n      ];\n    // 미완료/완료 토글\n    case TOGGLE_DONE: {\n      const newState = state.map((item) => {\n        return item.id === action.payload.id\n          ? {\n              ...item,\n              isDone: !item.isDone,\n            }\n          : item;\n      });\n      return newState;\n    }\n\n    // 투두 삭제\n    case DELETE_TODO:\n      return state.filter((todo) => todo.id !== action.payload.id);\n\n    default:\n      return state;\n  }\n};\nexport default todoApp;\n"],"mappings":"AAAA,SAAQA,EAAE,IAAIC,MAAM,QAAO,MAAM;;AAEjC;;AAEA;AACA,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,WAAW,GAAG,aAAa;;AAExC;AACA;AACA,OAAO,MAAMC,OAAO,GAAIC,OAAO,IAAK;EAClC,OAAO;IAACC,IAAI,EAAEL,QAAQ;IAAEI;EAAO,CAAC;AAClC,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAIF,OAAO,IAAK;EACrC,OAAO;IAACC,IAAI,EAAEJ,WAAW;IAAEG;EAAO,CAAC;AACrC,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAIH,OAAO,IAAK;EACrC,OAAO;IAACC,IAAI,EAAEH,WAAW;IAAEE;EAAO,CAAC;AACrC,CAAC;AAED,MAAMI,YAAY,GAAG,CACnB;EACEC,EAAE,EAAEV,MAAM,EAAE;EACZW,UAAU,EAAE,MAAM;EAClBC,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAE;AACV,CAAC,EACD;EACEH,EAAE,EAAEV,MAAM,EAAE;EACZW,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE,eAAe;EACtBC,MAAM,EAAE;AACV,CAAC,CACF;AAED,MAAMC,OAAO,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EAC3C,QAAQA,MAAM,CAACV,IAAI;IACjB;IACA,KAAKL,QAAQ;MACX,OAAO,CACL,GAAGc,KAAK,EACR;QACEL,EAAE,EAAEM,MAAM,CAACX,OAAO,CAACK,EAAE;QACrBC,UAAU,EAAEK,MAAM,CAACX,OAAO,CAACM,UAAU;QACrCC,KAAK,EAAEI,MAAM,CAACX,OAAO,CAACO,KAAK;QAC3BC,MAAM,EAAEG,MAAM,CAACX,OAAO,CAACQ;MACzB,CAAC,CACF;IACH;IACA,KAAKX,WAAW;MAAE;QAChB,MAAMe,QAAQ,GAAGF,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAK;UACnC,OAAOA,IAAI,CAACT,EAAE,KAAKM,MAAM,CAACX,OAAO,CAACK,EAAE,GAChC;YACE,GAAGS,IAAI;YACPN,MAAM,EAAE,CAACM,IAAI,CAACN;UAChB,CAAC,GACDM,IAAI;QACV,CAAC,CAAC;QACF,OAAOF,QAAQ;MACjB;;IAEA;IACA,KAAKd,WAAW;MACd,OAAOY,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACX,EAAE,KAAKM,MAAM,CAACX,OAAO,CAACK,EAAE,CAAC;IAE9D;MACE,OAAOK,KAAK;EAAC;AAEnB,CAAC;AACD,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}